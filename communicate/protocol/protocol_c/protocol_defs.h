// Auto-generated. DO NOT EDIT MANUALLY.
// Generated at UTC 2025-09-27 03:48:44
#ifndef PROTOCOL_DEFS_H
#define PROTOCOL_DEFS_H
#include <stdint.h>

#define PROTOCOL_DATA_VER_FULL  20250927034844ULL
#define PROTOCOL_DATA_VER       0xDC

// MSG roles
#define MSG_PC_TO_MCU 0x01
#define MSG_MCU_TO_PC 0x02

// Variable IDs (T in TLV)
#define VAR_FRICTION_WHEEL_SPEED 0x01
#define VAR_ARM_SHOT_TO_RESET 0x10
#define VAR_IMU_RESET 0x13
#define VAR_TEST_VAR_U8 0x1C
#define VAR_ARM_RESET_TO_STORE 0x1F
#define VAR_BASE_MOVE_BACKWARD_FAST 0x21
#define VAR_BASE_MOVE_FORWARD_FAST_EX 0x29
#define VAR_ARM_RESET_TO_HIGH_PREPARE 0x2E
#define VAR_ARM_HIGH_GRIP_TO_SHOT 0x34
#define VAR_BASE_ROTATE_CW_FAST 0x36
#define VAR_ARM_STORE_TO_SHOT 0x37
#define VAR_FIRE_ONCE 0x41
#define VAR_ARM_RESET 0x4B
#define VAR_ARM_LOW_GRIP_TO_WAIT_SHOT 0x4C
#define VAR_ARM_LOW_PREPARE_TO_GRIP 0x53
#define VAR_BASE_MOVE_FORWARD_FAST 0x5B
#define VAR_BASE_ROTATE_CW_SLOW 0x5D
#define VAR_ARM_HIGH_PREPARE_TO_GRIP 0x65
#define VAR_IMU_YAW 0x67
#define VAR_ARM_RELAX 0x72
#define VAR_ARM_LOW_GRIP_TO_STORE 0x77
#define VAR_BASE_STOP 0x7B
#define VAR_BASE_ROTATE_CCW_FAST 0x83
#define VAR_TEST_VAR_F32 0x88
#define VAR_BASE_MOVE_FORWARD_SLOW 0x8C
#define VAR_ERROR 0x93
#define VAR_BASE_ROTATE_CCW_SLOW 0x94
#define VAR_BASE_MOVE_BACKWARD_SLOW 0x99
#define VAR_BASE_MOVE_LEFT_SLOW 0x9A
#define VAR_OK 0x9D
#define VAR_ARM_HIGH_GRIP_TO_WAIT_SHOT 0x9E
#define VAR_BASE_MOVE_BACKWARD_FAST_EX 0x9F
#define VAR_GET_IMU_YAW 0xA3
#define VAR_GET_VOLTAGE 0xA4
#define VAR_FRICTION_WHEEL_STOP 0xA6
#define VAR_ARM_WAIT_SHOT_TO_SHOT 0xAB
#define VAR_VOLTAGE 0xBB
#define VAR_ARM_HIGH_GRIP_TO_STORE 0xBD
#define VAR_BASE_MOVE_LEFT_FAST 0xC5
#define VAR_BASE_MOVE_RIGHT_SLOW 0xC9
#define VAR_BASE_MOVE_RIGHT_FAST 0xCA
#define VAR_DART_PUSH_ONCE 0xCD
#define VAR_HEARTBEAT 0xD1
#define VAR_ARM_LOW_GRIP_TO_SHOT 0xD6
#define VAR_ARM_RESET_TO_LOW_PREPARE 0xD8
#define VAR_FRICTION_WHEEL_START 0xDE
#define VAR_TURRET_ANGLE_YAW 0xE1
#define VAR_TEST_VAR_U16 0xE6
#define VAR_ARM_STORE_TO_RESET 0xEB

// Fixed sizes (only for fixed-width variables); others are variable-length per TLV L
#define VAR_FRICTION_WHEEL_SPEED_SIZE 4
#define VAR_ARM_SHOT_TO_RESET_SIZE 1
#define VAR_IMU_RESET_SIZE 1
#define VAR_TEST_VAR_U8_SIZE 1
#define VAR_ARM_RESET_TO_STORE_SIZE 1
#define VAR_BASE_MOVE_BACKWARD_FAST_SIZE 1
#define VAR_BASE_MOVE_FORWARD_FAST_EX_SIZE 1
#define VAR_ARM_RESET_TO_HIGH_PREPARE_SIZE 1
#define VAR_ARM_HIGH_GRIP_TO_SHOT_SIZE 1
#define VAR_BASE_ROTATE_CW_FAST_SIZE 1
#define VAR_ARM_STORE_TO_SHOT_SIZE 1
#define VAR_FIRE_ONCE_SIZE 1
#define VAR_ARM_RESET_SIZE 1
#define VAR_ARM_LOW_GRIP_TO_WAIT_SHOT_SIZE 1
#define VAR_ARM_LOW_PREPARE_TO_GRIP_SIZE 1
#define VAR_BASE_MOVE_FORWARD_FAST_SIZE 1
#define VAR_BASE_ROTATE_CW_SLOW_SIZE 1
#define VAR_ARM_HIGH_PREPARE_TO_GRIP_SIZE 1
#define VAR_IMU_YAW_SIZE 4
#define VAR_ARM_RELAX_SIZE 1
#define VAR_ARM_LOW_GRIP_TO_STORE_SIZE 1
#define VAR_BASE_STOP_SIZE 1
#define VAR_BASE_ROTATE_CCW_FAST_SIZE 1
#define VAR_TEST_VAR_F32_SIZE 4
#define VAR_BASE_MOVE_FORWARD_SLOW_SIZE 1
#define VAR_ERROR_SIZE 1
#define VAR_BASE_ROTATE_CCW_SLOW_SIZE 1
#define VAR_BASE_MOVE_BACKWARD_SLOW_SIZE 1
#define VAR_BASE_MOVE_LEFT_SLOW_SIZE 1
#define VAR_OK_SIZE 1
#define VAR_ARM_HIGH_GRIP_TO_WAIT_SHOT_SIZE 1
#define VAR_BASE_MOVE_BACKWARD_FAST_EX_SIZE 1
#define VAR_GET_IMU_YAW_SIZE 1
#define VAR_GET_VOLTAGE_SIZE 1
#define VAR_FRICTION_WHEEL_STOP_SIZE 1
#define VAR_ARM_WAIT_SHOT_TO_SHOT_SIZE 1
#define VAR_VOLTAGE_SIZE 4
#define VAR_ARM_HIGH_GRIP_TO_STORE_SIZE 1
#define VAR_BASE_MOVE_LEFT_FAST_SIZE 1
#define VAR_BASE_MOVE_RIGHT_SLOW_SIZE 1
#define VAR_BASE_MOVE_RIGHT_FAST_SIZE 1
#define VAR_DART_PUSH_ONCE_SIZE 1
#define VAR_HEARTBEAT_SIZE 1
#define VAR_ARM_LOW_GRIP_TO_SHOT_SIZE 1
#define VAR_ARM_RESET_TO_LOW_PREPARE_SIZE 1
#define VAR_FRICTION_WHEEL_START_SIZE 1
#define VAR_TURRET_ANGLE_YAW_SIZE 4
#define VAR_TEST_VAR_U16_SIZE 2
#define VAR_ARM_STORE_TO_RESET_SIZE 1

static const uint8_t VAR_SIZE_TABLE[256] = {
    [VAR_FRICTION_WHEEL_SPEED] = 4,
    [VAR_ARM_SHOT_TO_RESET] = 1,
    [VAR_IMU_RESET] = 1,
    [VAR_TEST_VAR_U8] = 1,
    [VAR_ARM_RESET_TO_STORE] = 1,
    [VAR_BASE_MOVE_BACKWARD_FAST] = 1,
    [VAR_BASE_MOVE_FORWARD_FAST_EX] = 1,
    [VAR_ARM_RESET_TO_HIGH_PREPARE] = 1,
    [VAR_ARM_HIGH_GRIP_TO_SHOT] = 1,
    [VAR_BASE_ROTATE_CW_FAST] = 1,
    [VAR_ARM_STORE_TO_SHOT] = 1,
    [VAR_FIRE_ONCE] = 1,
    [VAR_ARM_RESET] = 1,
    [VAR_ARM_LOW_GRIP_TO_WAIT_SHOT] = 1,
    [VAR_ARM_LOW_PREPARE_TO_GRIP] = 1,
    [VAR_BASE_MOVE_FORWARD_FAST] = 1,
    [VAR_BASE_ROTATE_CW_SLOW] = 1,
    [VAR_ARM_HIGH_PREPARE_TO_GRIP] = 1,
    [VAR_IMU_YAW] = 4,
    [VAR_ARM_RELAX] = 1,
    [VAR_ARM_LOW_GRIP_TO_STORE] = 1,
    [VAR_BASE_STOP] = 1,
    [VAR_BASE_ROTATE_CCW_FAST] = 1,
    [VAR_TEST_VAR_F32] = 4,
    [VAR_BASE_MOVE_FORWARD_SLOW] = 1,
    [VAR_ERROR] = 1,
    [VAR_BASE_ROTATE_CCW_SLOW] = 1,
    [VAR_BASE_MOVE_BACKWARD_SLOW] = 1,
    [VAR_BASE_MOVE_LEFT_SLOW] = 1,
    [VAR_OK] = 1,
    [VAR_ARM_HIGH_GRIP_TO_WAIT_SHOT] = 1,
    [VAR_BASE_MOVE_BACKWARD_FAST_EX] = 1,
    [VAR_GET_IMU_YAW] = 1,
    [VAR_GET_VOLTAGE] = 1,
    [VAR_FRICTION_WHEEL_STOP] = 1,
    [VAR_ARM_WAIT_SHOT_TO_SHOT] = 1,
    [VAR_VOLTAGE] = 4,
    [VAR_ARM_HIGH_GRIP_TO_STORE] = 1,
    [VAR_BASE_MOVE_LEFT_FAST] = 1,
    [VAR_BASE_MOVE_RIGHT_SLOW] = 1,
    [VAR_BASE_MOVE_RIGHT_FAST] = 1,
    [VAR_DART_PUSH_ONCE] = 1,
    [VAR_HEARTBEAT] = 1,
    [VAR_ARM_LOW_GRIP_TO_SHOT] = 1,
    [VAR_ARM_RESET_TO_LOW_PREPARE] = 1,
    [VAR_FRICTION_WHEEL_START] = 1,
    [VAR_TURRET_ANGLE_YAW] = 4,
    [VAR_TEST_VAR_U16] = 2,
    [VAR_ARM_STORE_TO_RESET] = 1,
    // others default to 0 (variable-length)
};

#endif // PROTOCOL_DEFS_H

